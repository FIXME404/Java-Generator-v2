{"version":3,"file":"static/js/194.fbf69b46.chunk.js","mappings":"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","sources":["webpack://java-generator/./src/Pages/main-page/InputSection.module.scss?03d8","webpack://java-generator/./src/components/header-input/HeaderInput.module.scss?3200","webpack://java-generator/./src/components/inputs/TextInput.module.scss?bc99","components/inputs/TextInput.js","components/header-input/HeaderInput.js","webpack://java-generator/./src/components/variable-input/VariableInput.module.scss?827e","webpack://java-generator/./src/components/inputs/Checkbox.module.scss?bfd3","components/inputs/Checkbox.js","webpack://java-generator/./src/components/Buttons/RemoveInputFieldButton.module.scss?5f68","components/Buttons/RemoveInputFieldButton.js","components/variable-input/VariableInput.js","webpack://java-generator/./src/components/method-input/MethodInput.module.scss?d9ec","components/method-input/MethodInput.js","webpack://java-generator/./src/components/Buttons/AddInputFieldButton.module.scss?041a","components/Buttons/AddInputFieldButton.js","Pages/main-page/InputSection.js","webpack://java-generator/./src/components/UI/Card.module.scss?c6dc","components/UI/Card.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"input-section\":\"InputSection_input-section__goCN0\",\"input-section__add-btn\":\"InputSection_input-section__add-btn__1Oq4I\",\"input-section__to-code-btn\":\"InputSection_input-section__to-code-btn__F++8D\"};","// extracted by mini-css-extract-plugin\nexport default {\"header-sector\":\"HeaderInput_header-sector__j6bzv\",\"header-sector__content\":\"HeaderInput_header-sector__content__EX07z\"};","// extracted by mini-css-extract-plugin\nexport default {\"text-input\":\"TextInput_text-input__5EviA\"};","import { memo } from 'react';\r\nimport styles from './TextInput.module.scss';\r\n\r\nconst TextInput = props => {\r\n  // console.log('TEXT INPUT RENDERED');\r\n\r\n  const handleChange = event => {\r\n    const enteredText = event.target.value;\r\n    if (enteredText.trim().length > 0) props.updateMethod(enteredText, props.name);\r\n  };\r\n\r\n  return (\r\n    <div className={styles['text-input']}>\r\n      <input type='text' id={props.name} placeholder={props.placeholder} onBlur={handleChange} />\r\n      <label htmlFor={props.name}>{props.label}</label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(TextInput);\r\n","import styles from './HeaderInput.module.scss';\r\nimport { memo } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { headerActions } from '../../store/header';\r\nimport TextInput from '../inputs/TextInput';\r\n\r\nfunction HeaderInput() {\r\n  // console.log('HEADER INPUT RENDERED');\r\n  const dispatch = useDispatch();\r\n\r\n  const changeNameHandler = inputText => dispatch(headerActions.addName(inputText));\r\n\r\n  const changeExtendsHandler = inputText => dispatch(headerActions.addExtends(inputText));\r\n\r\n  const changeImplementsHandler = inputText => dispatch(headerActions.addImplements(inputText));\r\n\r\n  return (\r\n    <div className={styles['header-sector']}>\r\n      <div className={styles['header-sector__content']}>\r\n        <TextInput name='CLASSNAME' label='Class Name' placeholder='Class Name' updateMethod={changeNameHandler} />\r\n      </div>\r\n\r\n      <div className={styles['header-sector__content']}>\r\n        <TextInput name='EXTENDS' label='extend' placeholder='extend' updateMethod={changeExtendsHandler} />\r\n      </div>\r\n\r\n      <div className={styles['header-sector__content']}>\r\n        <TextInput name='IMPLEMENTS' label='implements' placeholder='implements' updateMethod={changeImplementsHandler} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default memo(HeaderInput);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"variable-sector\":\"VariableInput_variable-sector__ozGSi\",\"variable-sector__input\":\"VariableInput_variable-sector__input__w+awb\",\"variable-sector__checkbox\":\"VariableInput_variable-sector__checkbox__eXLh1\",\"variable-sector__delete-btn\":\"VariableInput_variable-sector__delete-btn__661O-\"};","// extracted by mini-css-extract-plugin\nexport default {\"checkbox\":\"Checkbox_checkbox__N3Hv8\"};","import { useState } from 'react';\r\nimport styles from './Checkbox.module.scss';\r\n\r\nfunction Checkbox(props) {\r\n  // console.log('CHECKBOX RENDERED');\r\n  const [isChecked, setIsChecked] = useState(false);\r\n\r\n  const handleOnKeyPress = event => {\r\n    if (event.key === 'Enter') {\r\n      setIsChecked(prevState => !prevState);\r\n      props.updateCheckbox(isChecked, props.name);\r\n    }\r\n  };\r\n\r\n  const handleChange = () => {\r\n    setIsChecked(prevState => !prevState);\r\n    props.updateCheckbox(isChecked, props.name);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.checkbox}>\r\n      <label>{props.label}</label>\r\n      <input type='checkbox' name={props.name} checked={isChecked} onKeyPress={handleOnKeyPress} onChange={handleChange} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Checkbox;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"delete-btn\":\"RemoveInputFieldButton_delete-btn__zlE8S\"};","import { useDispatch } from 'react-redux';\r\nimport { classVariablesActions } from '../../store/class-variables';\r\nimport { methodsActions } from '../../store/methods';\r\nimport styles from './RemoveInputFieldButton.module.scss';\r\n\r\nfunction RemoveInputField(props) {\r\n  const dispatch = useDispatch();\r\n\r\n  const removeItemHandler = () => {\r\n    if (props.type === 'variable') {\r\n      dispatch(classVariablesActions.removeVariable(props.id));\r\n    } else if (props.type === 'method') {\r\n      dispatch(methodsActions.removeMethod(props.id));\r\n    }\r\n  };\r\n\r\n  return <button onClick={removeItemHandler} className={styles['delete-btn']} />;\r\n}\r\n\r\nexport default RemoveInputField;\r\n","import styles from './VariableInput.module.scss';\r\nimport { useEffect, useReducer } from 'react';\r\nimport { useDispatch } from 'react-redux/es/exports';\r\nimport { classVariablesActions } from '../../store/class-variables';\r\nimport TextInput from '../inputs/TextInput';\r\nimport Checkbox from '../inputs/Checkbox';\r\nimport RemoveInputFieldButton from '../Buttons/RemoveInputFieldButton';\r\n\r\nconst initialState = { type: '', name: '', includesGetter: false, includesSetter: false };\r\n\r\nconst variableReducer = (state, action) => {\r\n  if (action.type === 'TYPE') {\r\n    return { ...state, type: action.value };\r\n  } else if (action.type === 'NAME') {\r\n    return { ...state, name: action.value };\r\n  } else if (action.type === 'GETTER') {\r\n    return { ...state, includesGetter: !state.includesGetter };\r\n  } else if (action.type === 'SETTER') {\r\n    return { ...state, includesSetter: !state.includesSetter };\r\n  } else {\r\n    return initialState;\r\n  }\r\n};\r\n\r\nfunction VariableInput(props) {\r\n  // console.log('VARIABLE INPUT RENDERED');\r\n  const [inputState, dispatchActions] = useReducer(variableReducer, initialState);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleTextChange = (state, action) => dispatchActions({ type: action, value: state });\r\n\r\n  const handleCheckboxChange = (state, action) => dispatchActions({ type: action, value: state });\r\n\r\n  useEffect(() => {\r\n    dispatch(classVariablesActions.updateVariable({ ...inputState, id: props.id }));\r\n    return () => {};\r\n  }, [inputState, dispatch, props.id]);\r\n\r\n  return (\r\n    <div className={styles['variable-sector']}>\r\n      <div className={styles['variable-sector__input']}>\r\n        <TextInput name='TYPE' label='Type' placeholder='Type' updateMethod={handleTextChange} />\r\n        <TextInput name='NAME' label='Name' placeholder='Name' updateMethod={handleTextChange} />\r\n      </div>\r\n\r\n      <div className={styles['variable-sector__checkbox']}>\r\n        <Checkbox name='GETTER' label='Getter?' updateCheckbox={handleCheckboxChange} />\r\n        <Checkbox name='SETTER' label='Setter?' updateCheckbox={handleCheckboxChange} />\r\n      </div>\r\n\r\n      <div className={styles['variable-sector__delete-btn']}>\r\n        <RemoveInputFieldButton type={'variable'} id={props.id} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VariableInput;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"method-sector\":\"MethodInput_method-sector__qqugK\",\"method-sector__input\":\"MethodInput_method-sector__input__j4bnV\",\"method-sector__input--params\":\"MethodInput_method-sector__input--params__MscHz\",\"method-sector__checkbox\":\"MethodInput_method-sector__checkbox__5wF4-\",\"method-sector__delete-btn\":\"MethodInput_method-sector__delete-btn__dfGdB\"};","import { useReducer, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux/es/exports';\r\nimport styles from './MethodInput.module.scss';\r\nimport TextInput from '../inputs/TextInput';\r\nimport Checkbox from '../inputs/Checkbox';\r\nimport RemoveInputFieldButton from '../Buttons/RemoveInputFieldButton';\r\nimport { methodsActions } from '../../store/methods';\r\n\r\nconst initialState = { returns: '', name: '', params: '', isMethodPrivate: false };\r\n\r\nconst methodReducer = (state, action) => {\r\n  if (action.type === 'RETURNS') {\r\n    return { ...state, returns: action.value };\r\n  } else if (action.type === 'NAME') {\r\n    return { ...state, name: action.value };\r\n  } else if (action.type === 'PARAMS') {\r\n    return { ...state, params: action.value };\r\n  } else if (action.type === 'IS_METHOD_PRIVATE') {\r\n    return { ...state, isMethodPrivate: !state.includesSetter };\r\n  } else {\r\n    return initialState;\r\n  }\r\n};\r\n\r\nfunction MethodInput(props) {\r\n  // console.log('METHOD INPUT RENDERED');\r\n  const [inputState, dispatchActions] = useReducer(methodReducer, initialState);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleTextChange = (state, action) => dispatchActions({ type: action, value: state });\r\n\r\n  const handleCheckboxChange = (state, action) => dispatchActions({ type: action, value: state });\r\n\r\n  useEffect(() => {\r\n    dispatch(methodsActions.updateMethod({ ...inputState, id: props.id }));\r\n    return () => {};\r\n  }, [inputState, dispatch, props.id]);\r\n\r\n  return (\r\n    <div className={styles['method-sector']}>\r\n      <div className={styles['method-sector__input']}>\r\n        <TextInput name='RETURNS' label='Return Type' placeholder='Return Type' updateMethod={handleTextChange} />\r\n\r\n        <TextInput name='NAME' label='Method Name' placeholder='Method Name' updateMethod={handleTextChange} />\r\n\r\n        <div className={styles['method-sector__input--params']}>\r\n          <TextInput name='PARAMS' label='Parameters (Comma Separated)' placeholder='Parameters (Comma Separated)' updateMethod={handleTextChange} />\r\n        </div>\r\n      </div>\r\n\r\n      <div className={styles['method-sector__checkbox']}>\r\n        <Checkbox name='IS_METHOD_PRIVATE' label='Private?' updateCheckbox={handleCheckboxChange} />\r\n      </div>\r\n\r\n      <div className={styles['method-sector__delete-btn']}>\r\n        <RemoveInputFieldButton type={'method'} id={props.id} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MethodInput;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"AddInputFieldButton_button__9CpZj\"};","import { useDispatch } from 'react-redux';\r\nimport { classVariablesActions } from '../../store/class-variables';\r\nimport { methodsActions } from '../../store/methods';\r\nimport styles from './AddInputFieldButton.module.scss';\r\n\r\nfunction AddInputFieldButton(props) {\r\n  const dispatch = useDispatch();\r\n\r\n  const addItemHandler = () => {\r\n    if (props.type === 'variable') {\r\n      dispatch(classVariablesActions.addVariable());\r\n    } else if (props.type === 'method') {\r\n      dispatch(methodsActions.addMethod());\r\n    }\r\n  };\r\n\r\n  return <button onClick={addItemHandler} className={styles.button} />;\r\n}\r\n\r\nexport default AddInputFieldButton;\r\n","import styles from './InputSection.module.scss';\r\nimport { useSelector } from 'react-redux';\r\nimport Card from '../../components/UI/Card';\r\nimport HeaderInput from '../../components/header-input/HeaderInput';\r\nimport VariableInput from '../../components/variable-input/VariableInput';\r\nimport MethodInput from '../../components/method-input/MethodInput';\r\nimport AddInputFieldButton from '../../components/Buttons/AddInputFieldButton';\r\n\r\nfunction InputSection() {\r\n  // console.log('INPUT SECTION RENDERED');\r\n  const variableFields = useSelector(state => state.variables.variables);\r\n  const methodFields = useSelector(state => state.methods.methods);\r\n\r\n  const variableInputs = variableFields.map(variable => <VariableInput key={variable.id} id={variable.id} />);\r\n\r\n  const methodInputs = methodFields.map(method => <MethodInput key={method.id} id={method.id} />);\r\n\r\n  return (\r\n    <section className={styles['input-section']} id='input'>\r\n      <Card>\r\n        {/* Header Input Fields */}\r\n        <h3>Class Header</h3>\r\n        <HeaderInput />\r\n\r\n        {/* Variable Input Fields */}\r\n        <h3>Instance Variables</h3>\r\n        {variableInputs}\r\n        <div className={styles['input-section__add-btn']}>\r\n          <AddInputFieldButton type={'variable'} />\r\n        </div>\r\n\r\n        {/* Method Input Fields */}\r\n        <h3>Methods</h3>\r\n        {methodInputs}\r\n        <div className={styles['input-section__add-btn']}>\r\n          <AddInputFieldButton type={'method'} />\r\n        </div>\r\n\r\n        {/* To Code Button */}\r\n        <div className={styles['input-section__to-code-btn']}>\r\n          <a href='#input'>GENERATE CODE</a>\r\n        </div>\r\n      </Card>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default InputSection;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"Card_card__bCtE5\",\"bottomEntrance\":\"Card_bottomEntrance__kmWaJ\"};","import styles from './Card.module.scss';\r\n\r\nfunction Card(props) {\r\n  return <div className={styles.card}>{props.children}</div>;\r\n}\r\n\r\nexport default Card;\r\n"],"names":["TextInput","props","className","styles","type","id","name","placeholder","onBlur","event","enteredText","target","value","trim","length","updateMethod","htmlFor","label","memo","HeaderInput","dispatch","useDispatch","inputText","headerActions","useState","isChecked","setIsChecked","checked","onKeyPress","key","prevState","updateCheckbox","onChange","onClick","classVariablesActions","methodsActions","initialState","includesGetter","includesSetter","variableReducer","state","action","useReducer","inputState","dispatchActions","handleTextChange","handleCheckboxChange","useEffect","RemoveInputFieldButton","returns","params","isMethodPrivate","methodReducer","variableFields","useSelector","variables","methodFields","methods","variableInputs","map","variable","methodInputs","method","Card","href","children"],"sourceRoot":""}