{"version":3,"file":"static/js/687.a5d6f72f.chunk.js","mappings":"kKACA,MAAmC,uCAAnC,EAAoF,8B,mBCqBpF,MAnBA,WAME,OACE,qBAASA,UAAWC,EAApB,WACE,SAACC,EAAA,EAAD,CAAQC,MAPQ,CAClB,CAAEC,KAAM,IAAKC,KAAM,QACnB,CAAED,KAAM,cAAeC,KAAM,kBAM3B,iBAAKL,UAAWC,EAAhB,WACE,iCACA,4CACA,gFACA,cAAGK,MAAM,0BAIhB,C,oECnBD,GAAgB,OAAS,uBAAuB,cAAgB,8BAA8B,KAAO,qBAAqB,qBAAqB,mCAAmC,gBAAkB,gCAAgC,YAAc,4BAA4B,kBAAoB,kCAAkC,qBAAqB,mCAAmC,4BAA4B,0CAA0C,uCAAuC,qDAAqD,aAAe,8B,6BCqE7iB,MAlEA,SAAgBC,GACd,IAAMC,EAAYC,SAASC,gBAAgBC,aAAa,cACxD,GAAuCC,EAAAA,EAAAA,UAAuB,SAAdJ,GAAhD,eAAOK,EAAP,KAAmBC,EAAnB,KACA,GAA+CF,EAAAA,EAAAA,UAAS,IAAxD,eAAOG,EAAP,KAAuBC,EAAvB,KAEMC,GAAsBC,EAAAA,EAAAA,cAAY,WAEtC,OADAL,EAAaJ,SAASC,gBAAgBS,aAAa,aAAc,QAAUV,SAASC,gBAAgBS,aAAa,aAAc,SACxHL,GAAiB,SAAAM,GAAK,OAAKA,CAAL,GAC9B,GAAE,CAACP,IAEEQ,EAAsB,WAC1BL,GAAqB,WACnB,MAAuB,KAAnBD,EACK,OAEA,EAEV,GACF,EAEKO,EAAaf,EAAMJ,MAAMoB,KAAI,SAACC,EAAMC,GACxC,YAAkBC,IAAdF,EAAKpB,MAAoC,OAAdoB,EAAKpB,MAEhC,eAAgBJ,UAAWC,EAAAA,6BAA3B,UACE,SAAC,KAAD,CAAM0B,GAAIH,EAAKpB,KAAf,SAAsBoB,EAAKnB,QADpBoB,IAMT,eAAgBzB,UAAWC,EAAAA,6BAA3B,UACE,cAAG2B,KAAMJ,EAAKA,KAAMK,OAAQL,EAAKK,OAAQC,IAAKN,EAAKM,IAAnD,SACGN,EAAKnB,QAFDoB,EAOd,IAED,OACE,oBAAQzB,UAAS,UAAKC,EAAOc,GAAZ,YAA+Bd,EAAAA,QAAhD,WAEE,gBAAKD,UAAWC,EAAAA,aAAwB8B,QAAS,kBAAMV,GAAN,EAAjD,UACE,gBAAKrB,UAAS,UAAKC,EAAOc,GAAZ,YAA+Bd,EAAAA,4BAI/C,gBAAKD,UAAS,UAAKC,EAAOc,GAAZ,YAA+Bd,EAAAA,iBAA6B8B,QAAS,kBAAMV,GAAN,KAGnF,iBAAKrB,UAAS,UAAKC,EAAOc,GAAZ,YAA+Bd,EAAAA,aAA7C,WAEE,cAAGD,UAAU,sBAGb,gBAAIA,UAAWC,EAAAA,sBAAf,UACGqB,GAED,gBAAKtB,UAAWC,EAAAA,wCAAhB,UACE,kBAAO+B,KAAK,WAAWC,GAAG,SAAS5B,KAAK,QAAQ6B,MAAOrB,EAAYsB,QAAStB,EAAYuB,SAAU,kBAAMnB,GAAN,cAM7G,C","sources":["webpack://java-generator/./src/Pages/error-pages/PageNotFound.module.scss?24f3","Pages/error-pages/PageNotFound.js","webpack://java-generator/./src/components/UI/Navbar.module.scss?bbe2","components/UI/Navbar.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"section__content\":\"PageNotFound_section__content__hXBTr\",\"section\":\"PageNotFound_section__QaQnI\"};","import styles from './PageNotFound.module.scss';\r\nimport Navbar from '../../components/UI/Navbar';\r\n\r\nfunction PageNotFound() {\r\n  const navbarLinks = [\r\n    { path: '/', name: 'Home' },\r\n    { path: '/report-bug', name: 'Report Bug' }\r\n  ];\r\n\r\n  return (\r\n    <section className={styles['section']}>\r\n      <Navbar links={navbarLinks} />\r\n      <div className={styles['section__content']}>\r\n        <h1>404</h1>\r\n        <h2>Page Not Found</h2>\r\n        <p>Sorry, the page you are looking for does not exist.</p>\r\n        <i class='fa-solid fa-code'></i>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default PageNotFound;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"Navbar_header__rzDpd\",\"rightEntrance\":\"Navbar_rightEntrance__lBi51\",\"open\":\"Navbar_open__Rw+U3\",\"header__menu--line\":\"Navbar_header__menu--line__pACPo\",\"header__overlay\":\"Navbar_header__overlay__3lUnn\",\"header__nav\":\"Navbar_header__nav__5goTO\",\"header__nav__logo\":\"Navbar_header__nav__logo__zTEGf\",\"header__nav--links\":\"Navbar_header__nav--links__MI0Ma\",\"header__nav--links__items\":\"Navbar_header__nav--links__items__8YPc4\",\"header__nav--links__toggle-container\":\"Navbar_header__nav--links__toggle-container__oQt4J\",\"header__menu\":\"Navbar_header__menu__BhAsv\"};","import styles from './Navbar.module.scss';\r\nimport React, { useState, useCallback } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Navbar(props) {\r\n  const htmlTheme = document.documentElement.getAttribute('data-theme');\r\n  const [themeState, changeThemeState] = useState(htmlTheme === 'dark' ? false : true);\r\n  const [hamburgerState, changeHamburgerState] = useState('');\r\n\r\n  const handleChangingTheme = useCallback(() => {\r\n    themeState ? document.documentElement.setAttribute('data-theme', 'dark') : document.documentElement.setAttribute('data-theme', 'light');\r\n    return changeThemeState(state => !state);\r\n  }, [themeState]);\r\n\r\n  const handleHamburgerOpen = () => {\r\n    changeHamburgerState(() => {\r\n      if (hamburgerState === '') {\r\n        return 'open';\r\n      } else {\r\n        return '';\r\n      }\r\n    });\r\n  };\r\n\r\n  const linksArray = props.links.map((link, index) => {\r\n    if (link.path !== undefined && link.path !== null) {\r\n      return (\r\n        <li key={index} className={styles['header__nav--links__items']}>\r\n          <Link to={link.path}>{link.name}</Link>\r\n        </li>\r\n      );\r\n    } else {\r\n      return (\r\n        <li key={index} className={styles['header__nav--links__items']}>\r\n          <a href={link.link} target={link.target} rel={link.rel}>\r\n            {link.name}\r\n          </a>\r\n        </li>\r\n      );\r\n    }\r\n  });\r\n\r\n  return (\r\n    <header className={`${styles[hamburgerState]} ${styles['header']}`}>\r\n      {/* Hamburger Lines */}\r\n      <div className={styles['header__menu']} onClick={() => handleHamburgerOpen()}>\r\n        <div className={`${styles[hamburgerState]} ${styles['header__menu--line']}`} />\r\n      </div>\r\n\r\n      {/* Overlay */}\r\n      <div className={`${styles[hamburgerState]} ${styles['header__overlay']}`} onClick={() => handleHamburgerOpen()} />\r\n\r\n      {/* Navbar */}\r\n      <nav className={`${styles[hamburgerState]} ${styles['header__nav']}`}>\r\n        {/* Logo */}\r\n        <i className='fa-solid fa-code'></i>\r\n\r\n        {/* Links */}\r\n        <ul className={styles['header__nav--links']}>\r\n          {linksArray}\r\n          {/* Dark Mode Toggler */}\r\n          <div className={styles['header__nav--links__toggle-container']}>\r\n            <input type='checkbox' id='toggle' name='theme' value={themeState} checked={themeState} onChange={() => handleChangingTheme()} />\r\n          </div>\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n"],"names":["className","styles","Navbar","links","path","name","class","props","htmlTheme","document","documentElement","getAttribute","useState","themeState","changeThemeState","hamburgerState","changeHamburgerState","handleChangingTheme","useCallback","setAttribute","state","handleHamburgerOpen","linksArray","map","link","index","undefined","to","href","target","rel","onClick","type","id","value","checked","onChange"],"sourceRoot":""}