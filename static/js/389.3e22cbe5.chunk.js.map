{"version":3,"file":"static/js/389.3e22cbe5.chunk.js","mappings":"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","sources":["webpack://java-generator/./src/Pages/main-page/GeneratedCodeSection.module.scss?8d9c","components/code-generators/ClassVariablesGenerator.js","components/code-generators/HeaderCodeGenerator.js","components/code-generators/JavaDocGenerator.js","components/code-generators/GettersSettersGenerator.js","components/code-generators/MethodsGenerator.js","Pages/main-page/GeneratedCodeSection.js","webpack://java-generator/./src/components/UI/Card.module.scss?c6dc","components/UI/Card.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"code-section\":\"GeneratedCodeSection_code-section__JUTaw\",\"code-section__content\":\"GeneratedCodeSection_code-section__content__n4G3w\",\"code-section__content--code\":\"GeneratedCodeSection_code-section__content--code__qfLCt\",\"code-section__success-message\":\"GeneratedCodeSection_code-section__success-message__asDtT\",\"code-section__show\":\"GeneratedCodeSection_code-section__show__7a0-W\"};","import { useSelector } from 'react-redux';\r\nimport nextId from 'react-id-generator';\r\n\r\nfunction ClassVariablesGenerator() {\r\n  const variables = useSelector(state => state.variables.variables);\r\n\r\n  const textColorStyle = {\r\n    color: 'DodgerBlue'\r\n  };\r\n\r\n  const instanceVariables = variables.map(variable => {\r\n    const displayVariable = variable.type.trim() !== '' || variable.name.trim() !== '';\r\n\r\n    if (displayVariable)\r\n      return (\r\n        <>\r\n          {`      private ${variable.type}`}{' '}\r\n          <span style={textColorStyle} key={nextId()}>\r\n            {variable.name}\r\n          </span>\r\n          ;\r\n          <br />\r\n        </>\r\n      );\r\n    return '';\r\n  });\r\n\r\n  return <>{instanceVariables}</>;\r\n}\r\n\r\nexport default ClassVariablesGenerator;\r\n","import { useSelector } from 'react-redux';\r\nimport ClassVariablesGenerator from './ClassVariablesGenerator';\r\n\r\nfunction HeaderCodeGenerator() {\r\n  const { name, extends: extend, implements: implement } = useSelector(state => state.headers.headers);\r\n\r\n  const textColorStyle = {\r\n    color: 'Coral'\r\n  };\r\n\r\n  const commentColorStyle = {\r\n    color: 'DarkSlateGray'\r\n  };\r\n\r\n  const projectJavaDoc = `/**\r\n      * ${name} -- .\r\n      *\r\n      * <p> Description: </p>\r\n      *\r\n      * @ author\r\n*/\r\n  `;\r\n\r\n  const classHeader = (\r\n    <span>\r\n      {`     \r\n  public class`}{' '}\r\n      <span style={textColorStyle}>{name}</span>{' '}\r\n      {extend.trim() !== '' ? (\r\n        <>\r\n          extend <span style={textColorStyle}>{extend} </span>\r\n        </>\r\n      ) : (\r\n        ''\r\n      )}\r\n      {implement.trim() !== '' ? (\r\n        <>\r\n          implement <span style={textColorStyle}>{implement} </span>\r\n        </>\r\n      ) : (\r\n        ''\r\n      )}\r\n      {`{`} <br />\r\n      <ClassVariablesGenerator />\r\n      {`       \r\n      /**\r\n            * default constructor --\r\n            *                                                                                                           \r\n      */\r\n      `}\r\n      {name.trim() !== '' ? (\r\n        <>\r\n          public <span style={textColorStyle}>{name}</span>\r\n        </>\r\n      ) : (\r\n        ''\r\n      )}\r\n      ()\r\n      {` {\r\n\r\n      }`}\r\n      <span style={commentColorStyle}>\r\n        {`//END OF DEFAULT CONSTRUCTOR`}\r\n        <br />\r\n        <br />\r\n      </span>{' '}\r\n    </span>\r\n  );\r\n\r\n  return (\r\n    <span>\r\n      {projectJavaDoc}\r\n      {classHeader}\r\n    </span>\r\n  );\r\n}\r\n\r\nexport default HeaderCodeGenerator;\r\n","function JavaDocGenerator(props) {\r\n  const { name, params, returns } = props;\r\n\r\n  let paramList = '';\r\n\r\n  if (params !== undefined) {\r\n    if (params.length === 1) {\r\n      paramList = `* @param -`;\r\n    } else if (params.length > 1) {\r\n      params.forEach(element => {\r\n        paramList += `* @param ${element} -\\n\\t        `;\r\n      });\r\n    }\r\n  }\r\n\r\n  const javaDoc = (\r\n    <span>\r\n      {`        /**\r\n              * ${name} -- \r\n              *\r\n              ${paramList[0] === '' ? '' : paramList}${returns === '' || returns === undefined ? '' : `* @return`}\r\n        */\r\n         `}\r\n    </span>\r\n  );\r\n\r\n  return <>{javaDoc}</>;\r\n}\r\n\r\nexport default JavaDocGenerator;\r\n","import { useSelector } from 'react-redux';\r\nimport JavaDocGenerator from './JavaDocGenerator';\r\nimport nextId from 'react-id-generator';\r\n\r\nfunction GettersSettersGenerator() {\r\n  // console.log('GETTERS SETTERS RENDERED');\r\n  const variables = useSelector(state => state.variables.variables);\r\n\r\n  const methodNameColor = {\r\n    color: 'DarkCyan'\r\n  };\r\n\r\n  const returnTextColor = {\r\n    color: 'Hotpink'\r\n  };\r\n\r\n  const commentTextColor = {\r\n    color: 'DarkSlateGray'\r\n  };\r\n\r\n  const parameterTextColor = {\r\n    color: 'lightsalmon'\r\n  };\r\n\r\n  const keyWordThisColor = {\r\n    color: 'Orange'\r\n  };\r\n\r\n  const mappedVariables = variables.map(variable => {\r\n    console.log(variable, 'variable');\r\n    const { type, name, includesGetter, includesSetter } = variable;\r\n\r\n    const getMethod = (\r\n      <>\r\n        <JavaDocGenerator name={'get' + name.charAt(0).toUpperCase() + name.slice(1)} returns={['']} key={nextId()} />\r\n        public {type}\r\n        <span style={methodNameColor}> get{name.charAt(0).toUpperCase() + name.slice(1)}</span>\r\n        {`() {\r\n              return `}\r\n        <span style={returnTextColor}>{name}</span>;\r\n        {`\r\n            }`}\r\n        <span style={commentTextColor}>{`//END OF GET ${name.toUpperCase()}`}</span>\r\n        <br />\r\n        <br />\r\n      </>\r\n    );\r\n\r\n    const setMethod = (\r\n      <>\r\n        <JavaDocGenerator name={'set' + name.charAt(0).toUpperCase() + name.slice(1)} params={['']} key={nextId()} />\r\n        public void\r\n        <span style={methodNameColor}> set{name.charAt(0).toUpperCase() + name.slice(1)}</span>(\r\n        <span style={parameterTextColor}>\r\n          {type} {name}\r\n        </span>\r\n        )\r\n        {` {\r\n              `}\r\n        <span style={keyWordThisColor}>this.</span>\r\n        <span style={returnTextColor}>{name}</span> = <span style={returnTextColor}>{name}</span>;\r\n        {`\r\n            }`}{' '}\r\n        <span style={commentTextColor}>{`//END OF SET${name.toUpperCase()}`}</span>\r\n        <br />\r\n        <br />\r\n      </>\r\n    );\r\n\r\n    return (\r\n      <span key={nextId()}>\r\n        {includesGetter && getMethod}\r\n        {includesSetter && setMethod}\r\n      </span>\r\n    );\r\n  });\r\n\r\n  return <>{mappedVariables}</>;\r\n}\r\n\r\nexport default GettersSettersGenerator;\r\n","import { useSelector } from 'react-redux';\r\nimport JavaDocGenerator from './JavaDocGenerator';\r\n\r\nfunction MethodsGenerator() {\r\n  const methods = useSelector(state => state.methods.methods);\r\n\r\n  const methodNameColor = {\r\n    color: 'DarkCyan'\r\n  };\r\n\r\n  const parameterTextColor = {\r\n    color: 'lightsalmon'\r\n  };\r\n\r\n  const commentTextColor = {\r\n    color: 'DarkSlateGray'\r\n  };\r\n\r\n  const returnTextColor = {\r\n    color: 'Hotpink'\r\n  };\r\n\r\n  const generatedCode = methods.map(method => {\r\n    const { returns, name, params, isMethodPrivate } = method;\r\n    console.log(returns, 'returns');\r\n\r\n    if (name.trim() !== '' || returns.trim() !== '') {\r\n      return (\r\n        <>\r\n          <JavaDocGenerator name={name} params={params.split(',')} returns={returns} />\r\n          {isMethodPrivate ? 'private' : 'public'} {returns === '' ? 'void' : returns} <span style={methodNameColor}>{name}</span>(<span style={parameterTextColor}>{params}</span>)\r\n          {` {\r\n            return `}\r\n          <span style={returnTextColor}>{returns.trim() !== '' && returns !== 'void' ? 'new' + returns.charAt(0).toUpperCase() + returns.slice(1) + '()' : ''}</span>\r\n          {`;\r\n            }`}\r\n          <span style={commentTextColor}>{`//END OF ${name.toUpperCase()}`}</span>\r\n          <br />\r\n          <br />\r\n        </>\r\n      );\r\n    }\r\n    return '';\r\n  });\r\n\r\n  return (\r\n    <span>\r\n      {generatedCode}\r\n      <br />\r\n      {`}`}\r\n    </span>\r\n  );\r\n}\r\n\r\nexport default MethodsGenerator;\r\n","import Card from '../../components/UI/Card';\r\nimport styles from './GeneratedCodeSection.module.scss';\r\nimport { useState, useEffect } from 'react';\r\nimport HeaderCodeGenerator from '../../components/code-generators/HeaderCodeGenerator';\r\nimport GettersSettersGenerator from '../../components/code-generators/GettersSettersGenerator';\r\nimport MethodsGenerator from '../../components/code-generators/MethodsGenerator';\r\n\r\nfunction GeneratedCodeSection() {\r\n  const [wasCopied, setWasCopied] = useState(false);\r\n\r\n  const copyToClipboard = () => {\r\n    const code = document.getElementById('generated-code').innerText;\r\n    navigator.clipboard.writeText(code);\r\n    setWasCopied(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let timer;\r\n    if (wasCopied) timer = setTimeout(() => setWasCopied(false), 1500);\r\n\r\n    return () => clearTimeout(timer);\r\n  }, [wasCopied]);\r\n\r\n  const isMessageDisplayed = wasCopied ? styles['code-section__show'] : '';\r\n\r\n  const clipBoardIcon = wasCopied ? <i className='fa-solid fa-check'></i> : <i className='fa-regular fa-clipboard' onClick={copyToClipboard}></i>;\r\n\r\n  return (\r\n    <section className={styles['code-section']} id='code'>\r\n      <Card>\r\n        <div className={styles['code-section__content']}>\r\n          <div className={styles['code-section__content--code']} id='generated-code'>\r\n            <HeaderCodeGenerator />\r\n            <GettersSettersGenerator />\r\n            <MethodsGenerator />\r\n          </div>\r\n          {clipBoardIcon}\r\n        </div>\r\n      </Card>\r\n\r\n      <div className={`${styles['code-section__success-message']} ${isMessageDisplayed}`}>Copied to clipboard!</div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default GeneratedCodeSection;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"Card_card__bCtE5\",\"bottomEntrance\":\"Card_bottomEntrance__kmWaJ\"};","import styles from './Card.module.scss';\r\n\r\nfunction Card(props) {\r\n  return <div className={styles.card}>{props.children}</div>;\r\n}\r\n\r\nexport default Card;\r\n"],"names":["variables","useSelector","state","textColorStyle","color","instanceVariables","map","variable","type","trim","name","style","nextId","headers","extend","extends","implement","implements","projectJavaDoc","classHeader","props","params","returns","paramList","undefined","length","forEach","element","javaDoc","methodNameColor","returnTextColor","commentTextColor","parameterTextColor","keyWordThisColor","mappedVariables","console","log","includesGetter","includesSetter","getMethod","charAt","toUpperCase","slice","setMethod","methods","generatedCode","method","isMethodPrivate","split","useState","wasCopied","setWasCopied","useEffect","timer","setTimeout","clearTimeout","isMessageDisplayed","styles","clipBoardIcon","className","onClick","code","document","getElementById","innerText","navigator","clipboard","writeText","id","Card","children"],"sourceRoot":""}